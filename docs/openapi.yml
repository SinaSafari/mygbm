openapi: '3.0.2'
info:
  title: gbm docs
  version: '0.1'
  description: ghahvatbaman api documentation
  contact:
    email: "m.sinasafari@gmail.com"

tags:
  - name: "authentication"
    description: authentication and authoroization routes
  - name: "posts"
    description: "routes related to posts managements"
  - name: "profiles"
    description: "profiles related routes"



servers:
  - url: http://localhost:3000/api/v1
    description: dev
  - url: https://ghahvatbaman.ir/api/v1
    description: production


components:
  schemas:
    login_payload:
      type: object
      properties:
        password:
          type: string
        lookup:
          type: string
          description: this is the filed that the system use as unique identifier
        type:
          type: string
          enum:
            - email
            - phoneNumber
          default: email
          description: this filed determines which filed should be searched in database for getting user information

    register_payload:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
        phoneNumber:
          type: string

    refresh_token_payload:
      type: object
      properties:
        refresh_token:
          type: string

    refresh_token_response:
      type: object
      properties:
        success:
          type: boolean
          default: true
        message:
          type: string
        data:
          type: object
          properties:
            accessToken:
              type: string
            newRefreshToken:
              type: string

    auth_error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message: 
          type: string
        data:
          type: object

    register_response:
      type: object
      properties:
        success: 
          type: boolean
          default: true
        message: 
          type: string
          default: "user created"
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                createdAt:
                  type: string
                updatedAt:
                  type: string
            token:
              type: string
            refresh_token:
              type: string


  securitySchemes:
    api_key:
      type: apiKey
      name: token
      in: cookie
paths:
  /auth/login:
    post:
      summary: login request using username and password
      description: this route currently using basic user/pass authentication. in future release it will convert to passwordless authentication flow
      tags: ["authentication"]
      requestBody:
        description: login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_payload'
        required: true
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/register_response"
        '400':
          description: erroro
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_error"
          
  /auth/register:
    post:
      tags: ["authentication"]
      requestBody:
        description: data for adding user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register_payload'
        required: true
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/register_response"
        '400':
          description: erroro
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_error"
  /auth/refresh:
    post:
      tags: ["authentication"]
      requestBody:
        description: refreshtoken functionality
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refresh_token_payload'
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refresh_token_response"
        '400':
          description: erroro
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auth_error"
